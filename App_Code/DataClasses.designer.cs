#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jiu")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertadmin(admin instance);
  partial void Updateadmin(admin instance);
  partial void Deleteadmin(admin instance);
  partial void Insertnews(news instance);
  partial void Updatenews(news instance);
  partial void Deletenews(news instance);
  partial void Insertzhaoshang(zhaoshang instance);
  partial void Updatezhaoshang(zhaoshang instance);
  partial void Deletezhaoshang(zhaoshang instance);
  partial void Insertproduct(product instance);
  partial void Updateproduct(product instance);
  partial void Deleteproduct(product instance);
  partial void InsertWebConfig(WebConfig instance);
  partial void UpdateWebConfig(WebConfig instance);
  partial void DeleteWebConfig(WebConfig instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["jiuConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<admin> admin
	{
		get
		{
			return this.GetTable<admin>();
		}
	}
	
	public System.Data.Linq.Table<news> news
	{
		get
		{
			return this.GetTable<news>();
		}
	}
	
	public System.Data.Linq.Table<zhaoshang> zhaoshang
	{
		get
		{
			return this.GetTable<zhaoshang>();
		}
	}
	
	public System.Data.Linq.Table<product> product
	{
		get
		{
			return this.GetTable<product>();
		}
	}
	
	public System.Data.Linq.Table<WebConfig> WebConfig
	{
		get
		{
			return this.GetTable<WebConfig>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin")]
public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _用户名;
	
	private string _密码;
	
	private string _邮箱;
	
	private string _手机号;
	
	private string _收货地址;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On密码Changing(string value);
    partial void On密码Changed();
    partial void On邮箱Changing(string value);
    partial void On邮箱Changed();
    partial void On手机号Changing(string value);
    partial void On手机号Changed();
    partial void On收货地址Changing(string value);
    partial void On收货地址Changed();
    #endregion
	
	public admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
	public string 用户名
	{
		get
		{
			return this._用户名;
		}
		set
		{
			if ((this._用户名 != value))
			{
				this.On用户名Changing(value);
				this.SendPropertyChanging();
				this._用户名 = value;
				this.SendPropertyChanged("用户名");
				this.On用户名Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_密码", DbType="NVarChar(50)")]
	public string 密码
	{
		get
		{
			return this._密码;
		}
		set
		{
			if ((this._密码 != value))
			{
				this.On密码Changing(value);
				this.SendPropertyChanging();
				this._密码 = value;
				this.SendPropertyChanged("密码");
				this.On密码Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_邮箱", DbType="NVarChar(50)")]
	public string 邮箱
	{
		get
		{
			return this._邮箱;
		}
		set
		{
			if ((this._邮箱 != value))
			{
				this.On邮箱Changing(value);
				this.SendPropertyChanging();
				this._邮箱 = value;
				this.SendPropertyChanged("邮箱");
				this.On邮箱Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_手机号", DbType="NVarChar(50)")]
	public string 手机号
	{
		get
		{
			return this._手机号;
		}
		set
		{
			if ((this._手机号 != value))
			{
				this.On手机号Changing(value);
				this.SendPropertyChanging();
				this._手机号 = value;
				this.SendPropertyChanged("手机号");
				this.On手机号Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_收货地址", DbType="NVarChar(50)")]
	public string 收货地址
	{
		get
		{
			return this._收货地址;
		}
		set
		{
			if ((this._收货地址 != value))
			{
				this.On收货地址Changing(value);
				this.SendPropertyChanging();
				this._收货地址 = value;
				this.SendPropertyChanged("收货地址");
				this.On收货地址Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.news")]
public partial class news : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _添加内容;
	
	private System.DateTime _更新时间;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On添加内容Changing(string value);
    partial void On添加内容Changed();
    partial void On更新时间Changing(System.DateTime value);
    partial void On更新时间Changed();
    #endregion
	
	public news()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_添加内容", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string 添加内容
	{
		get
		{
			return this._添加内容;
		}
		set
		{
			if ((this._添加内容 != value))
			{
				this.On添加内容Changing(value);
				this.SendPropertyChanging();
				this._添加内容 = value;
				this.SendPropertyChanged("添加内容");
				this.On添加内容Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_更新时间", DbType="DateTime NOT NULL")]
	public System.DateTime 更新时间
	{
		get
		{
			return this._更新时间;
		}
		set
		{
			if ((this._更新时间 != value))
			{
				this.On更新时间Changing(value);
				this.SendPropertyChanging();
				this._更新时间 = value;
				this.SendPropertyChanged("更新时间");
				this.On更新时间Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zhaoshang")]
public partial class zhaoshang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _用户名;
	
	private string _留言内容;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On用户名Changing(string value);
    partial void On用户名Changed();
    partial void On留言内容Changing(string value);
    partial void On留言内容Changed();
    #endregion
	
	public zhaoshang()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_用户名", DbType="NVarChar(50)")]
	public string 用户名
	{
		get
		{
			return this._用户名;
		}
		set
		{
			if ((this._用户名 != value))
			{
				this.On用户名Changing(value);
				this.SendPropertyChanging();
				this._用户名 = value;
				this.SendPropertyChanged("用户名");
				this.On用户名Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_留言内容", DbType="NVarChar(50)")]
	public string 留言内容
	{
		get
		{
			return this._留言内容;
		}
		set
		{
			if ((this._留言内容 != value))
			{
				this.On留言内容Changing(value);
				this.SendPropertyChanging();
				this._留言内容 = value;
				this.SendPropertyChanged("留言内容");
				this.On留言内容Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _产品名称;
	
	private string _产品图片;
	
	private string _产品类别;
	
	private string _产品介绍;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On产品名称Changing(string value);
    partial void On产品名称Changed();
    partial void On产品图片Changing(string value);
    partial void On产品图片Changed();
    partial void On产品类别Changing(string value);
    partial void On产品类别Changed();
    partial void On产品介绍Changing(string value);
    partial void On产品介绍Changed();
    #endregion
	
	public product()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品名称", DbType="NVarChar(50)")]
	public string 产品名称
	{
		get
		{
			return this._产品名称;
		}
		set
		{
			if ((this._产品名称 != value))
			{
				this.On产品名称Changing(value);
				this.SendPropertyChanging();
				this._产品名称 = value;
				this.SendPropertyChanged("产品名称");
				this.On产品名称Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品图片", DbType="NVarChar(50)")]
	public string 产品图片
	{
		get
		{
			return this._产品图片;
		}
		set
		{
			if ((this._产品图片 != value))
			{
				this.On产品图片Changing(value);
				this.SendPropertyChanging();
				this._产品图片 = value;
				this.SendPropertyChanged("产品图片");
				this.On产品图片Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品类别", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string 产品类别
	{
		get
		{
			return this._产品类别;
		}
		set
		{
			if ((this._产品类别 != value))
			{
				this.On产品类别Changing(value);
				this.SendPropertyChanging();
				this._产品类别 = value;
				this.SendPropertyChanged("产品类别");
				this.On产品类别Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_产品介绍", DbType="NVarChar(50)")]
	public string 产品介绍
	{
		get
		{
			return this._产品介绍;
		}
		set
		{
			if ((this._产品介绍 != value))
			{
				this.On产品介绍Changing(value);
				this.SendPropertyChanging();
				this._产品介绍 = value;
				this.SendPropertyChanged("产品介绍");
				this.On产品介绍Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WebConfig")]
public partial class WebConfig : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _网站名称;
	
	private string _网站地址;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void On网站名称Changing(string value);
    partial void On网站名称Changed();
    partial void On网站地址Changing(string value);
    partial void On网站地址Changed();
    #endregion
	
	public WebConfig()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_网站名称", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string 网站名称
	{
		get
		{
			return this._网站名称;
		}
		set
		{
			if ((this._网站名称 != value))
			{
				this.On网站名称Changing(value);
				this.SendPropertyChanging();
				this._网站名称 = value;
				this.SendPropertyChanged("网站名称");
				this.On网站名称Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_网站地址", DbType="NVarChar(50)")]
	public string 网站地址
	{
		get
		{
			return this._网站地址;
		}
		set
		{
			if ((this._网站地址 != value))
			{
				this.On网站地址Changing(value);
				this.SendPropertyChanging();
				this._网站地址 = value;
				this.SendPropertyChanged("网站地址");
				this.On网站地址Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
